#!/usr/bin/python

# cat /oldbang/var/log/apache/maxradi.us-access_log ~/logs/maxradi.us-access_log | ./log2rdf > data.rdf

import re, sys

from rdflib import Graph, Namespace, URIRef, RDFS, Literal

HOST = Namespace("http://bigasterisk.com/2006/02/picreferer/host#")
PR = Namespace("http://bigasterisk.com/2006/02/picreferer#")

graph = Graph()

for server in ["maxradi.us", "photo.bigasterisk.com", "leybourne.com"]:
    for logfile in [lf % server for lf in
                    ["/oldbang/var/log/apache/%s-access_log",
                     "/var/log/apache/%s-access_log"]]:
        print >>sys.stderr, "reading %s" % logfile
        try:
            f = open(logfile)
        except IOError:
            continue
        for line in f:
            if 'profile.myspace.com' in line:
                m = re.match(r'(?P<host>.*?) - - \[(?P<date>.*?)\] '+
                             r'"(?P<req>.*?)" (?P<status>\d+) (?P<bytes>\d+) '+
                             r'"(?P<referer>.*?)" "(?P<agent>.*?)"', line)
                if m is None:
                    continue
                if 'myspace' not in m.group('referer'):
                    continue
                local = URIRef("http://%s%s" %
                               (server, m.group('req').split()[1]))
                m2 = re.search(r'friend(?:id|ID)=(\d+)', m.group('referer'))
                if m2 is not None:
                    m2.group(1)
                    clean_referer = "http://profile.myspace.com/index.cfm?fuseaction=user.viewprofile&friendid=%s" % m2.group(1)
                    graph.add((URIRef(clean_referer), PR['requests'], local))
                    graph.add((URIRef(clean_referer), RDFS.label,
                               Literal("Myspace #%s" % m2.group(1))))
                else:
                    # editpage requests, etc
                    
                    referer = URIRef(m.group('referer'))
                    #graph.add((referer, PR['requests'], local))
        #        graph.add((HOST[m.group('host')], PR['requested'], 

print graph.serialize()

        
